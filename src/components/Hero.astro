---
import { Icon } from 'astro-icon/components'
import { Image } from 'astro:assets'

/**
 * Hero Component
 *
 * @description A component that displays a hero section with a title, description, and image
 */
interface Props {
  /**
   * The source URL for the image
   */
  src?: string
}

const { src = '/undraw_bug-fixing1.svg' }: Props = Astro.props
---

<section class="hero my-12 md:my-16 lg:my-24">
  <div class="container">
    <div class="grid grid-cols-1 items-center gap-12 md:gap-16 lg:gap-24 lg:grid-cols-2">
      <div class="flex flex-col items-center gap-8 md:items-start">
        <h1 class="text-center text-6xl md:text-left lg:text-8xl">
          <slot><span class="text-gradient">Repair Café</span> Xanten</slot>
        </h1>
        

        
        <p class="text-center text-2xl md:text-left max-w-3xl">
          Gemeinsam Reparieren - statt wegwerfen. 
          <b>Einmal monatlich</b> unterstützen dich ehrenamtliche <b>Expertinnen & Experten</b> unentgeltlich beim Reparieren.
          Bei Kaffee und Gebäck teilen wir Wissen und stärken das soziale Miteinander.
        </p>

        <div class="flex flex-col gap-3 min-[500px]:flex-row">
          <a class="button has-icon color-secondary w-full min-[500px]:w-auto min-[500px]:min-w-[200px] justify-center" href="#services">
            <Icon name="lucide:wrench" />
            Unsere Services
          </a>
          <a class="button has-icon bg-repair-green hover:bg-repair-green/90 text-white border-0 w-full min-[500px]:w-auto min-[500px]:min-w-[200px] justify-center transition-all duration-300" href="#contact">
            <Icon name="lucide:phone" />
            Kontakt
          </a>
        </div>
      </div>
      <Image class="hidden lg:block" src={src} alt="" decoding="async" width={500} height={600} loading="eager" />
    </div>
  </div>
</section>

<style lang="scss">
  h1 {
    text-wrap: unset;
  }

  .text-gradient {
    background: linear-gradient(
      315deg,
      light-dark(var(--color-primary-300), var(--color-secondary-100)) 25%,
      light-dark(var(--color-secondary-300), var(--color-primary-200))
    );
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  // Ensure equal button sizes on mobile
  @media (max-width: 499px) {
    .button {
      min-height: 3rem;
      display: flex !important;
      align-items: center;
      justify-content: center;
      width: 100% !important;
    }
  }
</style>